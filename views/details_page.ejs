<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <style>
      body {
        background-color: #2e323d;
        color: white;
      }

      .input-group {
        position: relative;
      }

      .input {
        border: 3px solid #4b4b4b;
        background: none;
        padding: 1rem;
        font-size: 1rem;
        color: white;
      }

      .user-label {
        position: absolute;
        left: 15px;
        color: white;
        pointer-events: none;
        transform: translateY(1rem);
        transition: 350ms;
      }

      .input:focus,
      input:valid {
        outline: none;
        --angle: 0deg;
        border-bottom: 3px solid;
        border-image: conic-gradient(
            from var(--angle),
            red,
            yellow,
            lime,
            aqua,
            blue,
            magenta,
            red
          )
          1;
        animation: 3s rotate9234 linear infinite;
      }

      @keyframes rotate9234 {
        to {
          --angle: 360deg;
        }
      }

      @property --angle {
        syntax: '<angle>';
        initial-value: 0deg;
        inherits: false;
      }

      .input:focus ~ label,
      input:valid ~ label {
        transform: translateY(235%) scale(1);
        background-color: #e8e8e8;
        padding: 0 0.2em;
        color: #2196f3;
      }
      .wrapper {
        perspective: 500px;
        transform: rotatex(10deg);
        animation: rotateAngle 6s linear infinite;
        margin: auto;
        width: auto;
      }

      button {
        display: block;
        position: relative;
        margin: 0.5em 0;
        padding: 0.8em 2.2em;
        cursor: pointer;
        background: #ffffff;
        border: none;
        border-radius: 0.4em;
        text-transform: uppercase;
        font-size: 19px;
        font-family: 'Work Sans', sans-serif;
        font-weight: 500;
        letter-spacing: 0.04em;
        mix-blend-mode: color-dodge;
        perspective: 500px;
        transform-style: preserve-3d;
      }

      button:before,
      button:after {
        --z: 0px;
        position: absolute;
        top: 0;
        left: 0;
        display: block;
        content: '';
        width: 100%;
        height: 100%;
        opacity: 0;
        mix-blend-mode: inherit;
        border-radius: inherit;
        transform-style: preserve-3d;
        transform: translate3d(
          calc(var(--z) * 0px),
          calc(var(--z) * 0px),
          calc(var(--z) * 0px)
        );
      }

      button span {
        mix-blend-mode: none;
        display: block;
      }

      button:after {
        background-color: #5d00ff;
      }

      button:before {
        background-color: #ff1731;
      }

      button:hover {
        background-color: #fff65b;
        transition: background 0.3s 0.1s;
      }

      button:hover:before {
        --z: 0.04;
        animation: translateWobble 2.2s ease forwards;
      }

      button:hover:after {
        --z: -0.06;
        animation: translateWobble 2.2s ease forwards;
      }

      @keyframes rotateAngle {
        0% {
          transform: rotateY(0deg) rotateX(10deg);
          -webkit-animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
          animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
        }

        25% {
          transform: rotateY(20deg) rotateX(10deg);
        }

        50% {
          transform: rotateY(0deg) rotateX(10deg);
          -webkit-animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
          animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
        }

        75% {
          transform: rotateY(-20deg) rotateX(10deg);
        }

        100% {
          transform: rotateY(0deg) rotateX(10deg);
        }
      }

      @keyframes translateWobble {
        0% {
          opacity: 0;
          transform: translate3d(
            calc(var(--z) * 0px),
            calc(var(--z) * 0px),
            calc(var(--z) * 0px)
          );
        }

        16% {
          transform: translate3d(
            calc(var(--z) * 160px),
            calc(var(--z) * 160px),
            calc(var(--z) * 160px)
          );
        }

        28% {
          opacity: 1;
          transform: translate3d(
            calc(var(--z) * 70px),
            calc(var(--z) * 70px),
            calc(var(--z) * 70px)
          );
        }

        44% {
          transform: translate3d(
            calc(var(--z) * 130px),
            calc(var(--z) * 130px),
            calc(var(--z) * 130px)
          );
        }

        59% {
          transform: translate3d(
            calc(var(--z) * 85px),
            calc(var(--z) * 85px),
            calc(var(--z) * 85px)
          );
        }

        73% {
          transform: translate3d(
            calc(var(--z) * 110px),
            calc(var(--z) * 110px),
            calc(var(--z) * 110px)
          );
        }

        88% {
          opacity: 1;
          transform: translate3d(
            calc(var(--z) * 90px),
            calc(var(--z) * 90px),
            calc(var(--z) * 90px)
          );
        }

        100% {
          opacity: 1;
          transform: translate3d(
            calc(var(--z) * 100px),
            calc(var(--z) * 100px),
            calc(var(--z) * 100px)
          );
        }
      }

      select {
        appearance: none;
        font-size: 50px;
        background-color: white;
        border: none;
        padding: 0 1em 0 0;
        margin: 0;
        margin-right: 10px;

        width: 200px;
        font-family: inherit;
        font-size: inherit;
        cursor: inherit;
        line-height: inherit;
        height: 47px;
      }

      a {
        background-color: red;
        color: white;
        padding: 1em 1.5em;
        text-decoration: none;
        text-transform: uppercase;
        display: block;
        /* margin-top: 25px; */
        width: 120px;
      }

      a:hover {
        background-color: #555;
      }

      a:active {
        background-color: black;
      }
      .search {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
        margin: 50px auto;
        width: 800px;
      }
      .add-button {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 50px;
        width: 50px;
        font-size: 40px;
        background-color: aquamarine;
        border-radius: 50%;
        position: fixed;
        padding: 10px;
        bottom: 50px;
        right: 50px;
        cursor: pointer;
      }
      .issue-list {
        list-style: none;
      }

      .project-name {
        font-size: 30px;
        margin-bottom: 12px;
      }
      .project-desc {
        font-size: 25px;
        margin-bottom: 10px;
      }
      .project-author {
        margin-bottom: 20px;
      }
      .project-list {
        list-style: none;
        padding: 40px;
      }

      .project-list-items {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        margin-bottom: 60px;
        padding: 10px;
        border: 2px solid #202020;
        border-radius: 15px;
        width: 100%;
      }

      .project-list-items:hover {
        cursor: pointer;
        color: aquamarine;
      }
      .label-list {
        list-style: none;
        display: flex;
        align-items: center;
        justify-content: flex-start;
      }
      .label-list-items {
        font-size: 20px;
        border: 2px solid #2196f3;
        padding: 10px;
        margin-right: 20px;
        border-radius: 20px;
      }
    </style>

    <title><%= title %></title>
  </head>
  <body>
    <div class="search">
      <select name="filter" id="filter">
        <option value="">Select</option>

        <option value="label">label</option>
        <option value="author">author</option>
        <option value="author">title</option>
      </select>
      <section>
        <div class="input-group">
          <input
            class="input input-value"
            autocomplete="off"
            name="text"
            type="text"
            required="true"
          />
          <label class="user-label">Enter</label>
        </div>
      </section>
      <div class="wrapper">
        <button class="filter-button">Filter!</button>
      </div>
      <a href="/project/<%=projectId%>">Show All</a>
    </div>
    <ul id="issues" class="project-list" data-id="<%=projectId%>">
      <% for(issue of issues) {%>
      <li class="project-list-items">
        <h2 class="project-name"><%= issue.title%></h2>
        <p class="project-desc"><%= issue.description%></p>
        <p class="project-author"><%= issue.author%></p>
        <h2>Labels:</h2>
        <ul class="label-list">
          <% for(label of issue.label){%>
          <li class="label-list-items"><%= label%></li>
          <%}%>
        </ul>
      </li>
      <%}%>
    </ul>
    <button class="add-button">+</button>
    <script>
      const select = document.querySelector('select');
      const input = document.querySelector('.input-value');
      const filter_button = document.querySelector('.filter-button');
      const issues = document.getElementById('issues');
      filter_button.addEventListener('click', () => {
        const filterArr = input.value.split(' ').join('&');
        const field = select.value;
        if (!field) return;
        window.open(
          `/filterIssue/${field}/${filterArr}/${issues.dataset.id}`,
          '_self'
        );
      });
      const add_button = document.querySelector('.add-button');

      add_button.addEventListener('click', () => {
        window.open('/addIssue', '_self');
      });
    </script>
  </body>
</html>
